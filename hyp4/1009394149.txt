left just as software engineering ( as a process ) is defined by differing methodologies , so the programming languages ( as models of computation ) are defined by differing paradigms some languages are designed to support one paradigm ( smalltalk supports object-oriented programming , haskell supports functional programming ) , while other programming languages support multiple paradigms ( such as object pascal , c++ , java , javascript , c , scala , visual basic , common lisp , scheme , perl , php , python , ruby , wolfram language , oz , and f ) for example , programs written in c++ , object pascal or php can be purely procedural , purely object-oriented , or can contain elements of both or other paradigms programming paradigms can also be compared with programming models , which allows invoking an execution model by using only an api programming models can also be classified into paradigms based on features of the execution model this causes the programmer to have to map patterns in the algorithm onto patterns in the execution model ( which have been inserted due to leakage of hardware into the abstraction ) such parallel programming models can be classified according to abstractions that reflect the hardware , such as shared memory , distributed memory with message passing , notions of place visible in the code , and so forth . they argue that many programming languages can not be strictly classified into one paradigm , but rather include features from several paradigms the lowest-level programming paradigms are machine code , which directly represents the instructions ( the contents of program memory ) as a sequence of numbers , and assembly language where the machine instructions are represented by mnemonics and memory addresses can be given symbolic labels that is , they describe , step by step , exactly the procedure that should , according to the particular programmer at least , be followed to solve a specific problem in these languages , the computer is told what the problem is , not how to solve the problem the program is structured as a set of properties to find in the expected result , not as a procedure to follow facts about the problem domain are expressed as logic formulas , and programs are executed by applying inference rules over them until an answer to the problem is found , or the set of formulas is proved inconsistent most programming languages support more than one programming paradigm to allow programmers to use the most suitable programming style and associated language constructs for a given job . 
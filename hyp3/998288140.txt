internal iterators are higher order functions ( often taking anonymous functions ) such as map , reduce etc , implementing the traversal across a container , applying the given function to every element in turn external iterators and the iterator pattern depending on the language and intended use , iterators may also provide additional operations or exhibit different behaviors an iterator class is usually designed in tight coordination with the corresponding container class a loop counter is sometimes also referred to as a loop iterator in python , a generator is an iterator constructor : a function that returns an iterator in python , iterators are objects representing streams of data an iterator may allow the container object to be modified without invalidating the iterator this assertion must however be taken with a grain of salt , because more often than not , for efficiency reasons , the iterator implementation is so tightly bound to the container that it does preclude modification of the underlying container without invalidating itself java 's iterator , iterable and listiterator explained 
some operating systems , such as freebsd , offer the ability to modify file permissions and filesystem attributes of a symbolic link , through lchmod and lchflags system calls respectively shortcuts , which are supported by the graphical file browsers of some operating systems , may resemble symbolic links but differ in a number of important ways another difference are the capabilities of the mechanism : microsoft windows shortcuts normally refer to a destination by an absolute path ( starting from the root directory ) , whereas posix symbolic links can refer to destinations via either an absolute or a relative path q & a : the difference between hard and soft links as applied to linux junction : maintain ntfs junction points ( for windows 2000 and above ) fsutil hardlink : microsoft technet page on using the command-line tool fsutil to create hardlinks ( for windows 2000 and above ) link shell extension : windows explorer context menu , overlay icons and property sheet handler to maintain hardlinks , ntfs junction points , symbolic links etc 